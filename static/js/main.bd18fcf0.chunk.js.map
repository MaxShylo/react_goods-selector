{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleClear","setState","handleAddGood","good","this","className","type","onClick","map","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,IAFlB,EAKEC,YAAc,kBAAM,EAAKC,SAAS,CAAEF,aAAc,MALpD,EAOEG,cAAgB,SAACC,GAAD,OAAkB,EAAKF,SAAS,CAAEF,aAAcI,KAPlE,4CASE,WAAU,IAAD,OACCJ,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UACGN,EAAY,UACNA,EADM,gBAET,oBAEHA,GAEC,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKJ,iBAKpB,uBAAOK,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAAAL,GAAI,OACb,qBACEE,UAAWI,IACT,CAAE,+BAAgCV,IAAiBI,IAErD,UAAQ,OAJV,UAQGJ,IAAiBI,EAEd,6BACE,wBACE,UAAQ,eACRG,KAAK,SACLD,UAAU,iBACVE,QAAS,EAAKP,YAJhB,iBAWF,6BACE,wBACE,UAAQ,YACRM,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKL,cAAcC,IAJpC,iBAWN,oBAAI,UAAQ,YAAYE,UAAU,eAAlC,SACGF,MA9BEA,iBAtCrB,GAAyBO,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bd18fcf0.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: '',\n  };\n\n  handleClear = () => this.setState({ selectedGood: '' });\n\n  handleAddGood = (good: string) => this.setState({ selectedGood: good });\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {selectedGood\n            ? `${selectedGood} is selected`\n            : 'No goods selected'}\n\n          {selectedGood && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.handleClear}\n            />\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr\n                className={classNames(\n                  { 'has-background-success-light': selectedGood === good },\n                )}\n                data-cy=\"Good\"\n                key={good}\n              >\n\n                {selectedGood === good\n                  ? (\n                    <td>\n                      <button\n                        data-cy=\"RemoveButton\"\n                        type=\"button\"\n                        className=\"button is-info\"\n                        onClick={this.handleClear}\n                      >\n                        -\n                      </button>\n                    </td>\n                  )\n                  : (\n                    <td>\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => this.handleAddGood(good)}\n                      >\n                        +\n                      </button>\n                    </td>\n                  )}\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}